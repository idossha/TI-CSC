version: 2.1

executors:
  docker-executor:
    machine: true  # Enables a full VM instead of a Docker-in-Docker container

jobs:
  run-tests:
    executor: docker-executor
    steps:
      # Step 1: Checkout the repository
      - checkout

      # Step 2: Cleanup workspace to remove old build artifacts
      - run:
          name: Cleanup workspace
          command: rm -rf ./build ./temp || true

      # Step 3: Free up disk space (optional)
      - run:
          name: Free up disk space
          command: |
            chmod +x ./utils/test/scripts/free_disk_space.sh
            ./utils/test/scripts/free_disk_space.sh

      # Step 4: Ensure Docker Daemon is running
      - run:
          name: Verify Docker Daemon
          command: |
            sudo systemctl start docker  # Start Docker if not already running
            docker info  # Confirm Docker is working properly

      # Step 5: Enable BuildKit for better Docker build performance
      - run:
          name: Enable Docker BuildKit
          command: export DOCKER_BUILDKIT=1

      # Step 6: Build the testing Docker image
      - run:
          name: Build Docker Image
          command: |
            docker build --pull --rm \
              -f "./utils/test/docker/Dockerfile" \
              -t ticsctests:latest \
              .

      # Step 7: Run Unit Tests (Python + Bash)
      - run:
          name: Running Unit Tests
          command: |
            sudo docker run --rm ticsctests bash -c "simnibs_python -m pytest /ti-csc/utils/test/unit" || \
              (echo "Python unit tests failed. Reviewing logs..." && exit 1)
            sudo docker run --rm ticsctests bash -c "bats /ti-csc/utils/test/unit/" || \
              (echo "Bash unit tests failed. Reviewing logs..." && exit 1)

      # Step 8: Run Integration Tests 
      - run:
          name: Running Integration Tests
          command: |
            docker run --rm ticsctests bash -c "\
              chmod +x /ti-csc/utils/test/integration/test_analyzerIT.sh && \
              chmod +x /ti-csc/analyzer/field-analysis/process_mesh_files && \
              /ti-csc/utils/test/integration/test_analyzerIT.sh || \
              (echo 'Integration tests failed. Reviewing logs...' && exit 1)"

      # Step 9: Cleanup Docker to free up space after tests
      - run:
          name: Cleanup Docker
          when: always
          command: sudo docker system prune --all --force

          # ADDED COMMENT FOR TESTING
# Workflow: Runs only on PRs targeting `main`
workflows:
  version: 2
  test_pipeline:
    jobs:
      - run-tests:
          filters:
            branches:
              ignore:
                - main  # Prevents running when directly pushing to `main`
